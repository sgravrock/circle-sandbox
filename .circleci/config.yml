version: 2.1
orbs:
  node: circleci/node@3.0.0

executors:
  node14:
    docker:
      - image: circleci/node:14
    resource_class: small
    working_directory: ~/circle-sandbox

jobs:
  build:
    executor: node14
    steps:
      - checkout
#      - run:
#          name: Install dependencies
#          command: npm install
      - persist_to_workspace:
          root: .
          paths:
            - .

  kill_from_same_step:
    executor: node14
    steps:
      - checkout
      - run:
          name: Kill something from the same step
          command: |
            find . -print
            ./.circleci/signalme &
            sleep 1
            echo "Processes:"
            ps -ef
            pid=$(ps -ef | grep signalme | grep -v grep | awk '{print $2}')
            echo Killing PID: $pid
            kill $pid
            echo Any left?
            ps -ef | grep signalme || true

  kill_from_other_step:
    executor: node14
    steps:
      - checkout
      - run:
          name: Start something that we'll kill in a later step
          command: |
            nohup ./.circleci/signalme 0<&- &>/tmp/signalme.log &
            sleep 1
      - run:
          name: Kill something from an earlier step
          command: |
            echo "Processes:"
            ps -ef
            kill $(ps -ef | grep signalme | grep -v grep | awk '{print $2}')
            echo Any left?
            ps -ef | grep signalme || true
            echo "Output:"
            cat /tmp/signalme.log
      
  test:
    parameters:
      browser:
        type: string
    executor: node14
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Demo param parsing
          command: |
            name=$(echo "<< parameters.browser >>" | awk 'NF{NF-=1}1')
            version=$(echo "<< parameters.browser >>" | awk '{print $NF}')

            if [ $version = latest ]; then
              version=""
            fi

            echo "Browser name: $name"
            echo "Browser version: $version"

            echo "Testing error handling"
            set +o errexit
            false
            exitcode=$?
            echo "Still going despite exitcode of $exitcode."
            echo "Will now exit with that."
            exit $exitcode
      - run:
          name: Run tests
          command: npm test
      - run:
          name: Any snakes on this plane?
          command: /usr/bin/env python3

workflows:
  node-tests:
    jobs:
      - kill_from_same_step
      - kill_from_other_step
      - build
#      - test:
#          requires:
#            - build
#          matrix:
#            parameters:
#              browser:
#                - internet explorer 11
#                - internet explorer 10
#                - firefox latest
#                - firefox 78
#                - firefox 68
#                - chrome latest
#                - safari 14
#                - safari 13
#                - safari 12
#                - safari 11
#                - safari 10
#                - safari 9
#                - safari 8
#                - MicrosoftEdge latest
